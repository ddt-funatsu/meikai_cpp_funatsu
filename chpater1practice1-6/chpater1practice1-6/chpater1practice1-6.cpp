/*

	関数名　	main
	問題　		ｘ、ｙを宣言しそれぞれに６３，１８を代入しその値とわ、平均を画面出力する元のプログラムを変更して、
				小数部をもつ実数値をxやyに代入するプログラムを作成せよ。その実行結果から、int型変数が整数値のみしか扱えないことを確認する事。
	関数概要	int型ローカル変数を2つ定義し、そのそれぞれとその和と平均を表示する。ただし、両変数に実数値を代入し正しい計算を行われない事を示す
	引数		なし
	戻り値		なし
	作成者　	船津　優斗
	作成日		2020/9/8

*/

/*
結果
	実数値を入れた場合コンパイルは正常終了する。しかし、実行結果はｘ、ｙ、の値がそれぞれ63,18と小数点以下が切り落とされる。さらに合計、平均の計算結果も小数点以下が切り捨てられる。
	また、整数を代入した場合でも割り算は切り捨てられて整数となる。
考察
	ｃ＋＋の言語仕様としてそもそも整数型では小数点が代入であっても演算結果であっても宣言した時の型以上のメモリ空間を確保しないためと考えられる。
*/

// 標準ライブラリ読み込みの為にヘッダをインクルード
#include<iostream>

// 使用する名前空間を指定
using namespace std;

// プログラムのエントリポイント
int main() {

	////////////////////////ローカル変数定義///////////////////////////

	int x, y;

	///////////////////////////////処理/////////////////////////////////

	// ローカル変数に値をそれぞれ代入	
	x = 63.1; // ここに実数を代入した
	y = 18.1; //ここに実数を代入した

	// ローカル変数の代入結果をコンソール画面に出力
	cout << "xの値は" << x << "です。\n";
	cout << "yの値は" << y << "です。\n";

	// 和の結果をコンソール画面に表示
	cout << "合計は" << x + y << "です\n";

	// 2つのローカル変数の平均を計算しコンソール画面に出力
	cout << "平均は" << (x + y) / 2 << "です。\n";

}